---
- name: turn off iptables
  service: name=iptables state=stopped enabled=no

- name: replace config files
  copy: src={{ item.name }} dest={{ item.dest }}
  with_items:
    - { name: rsync, dest: /etc/xinetd.d/rsync }
    - { name: debmirror.conf, dest: /etc/debmirror.conf }

- name: restart xinetd service
  service: name=xinetd state=restarted enabled=yes

- name: configure interface for dhcp
  command: ifconfig {{ mgmt_nic }}:1 {{ mgmt_next_ip }} netmask {{ mgmt_subnet_mask }}
  when: not mgmt_ip_same 

- name: copy httpd configuration files
  file: src={{ item }} dest=/etc/httpd/conf.d/{{ item }} mode=0644
  with_items:
    - cobbler_web.conf
    - ssl.conf
  notify:
    restart httpd

- name: disable selinux
  selinux: state=disabled

- name: disable selinux real time
  shell: echo 0 > /selinux/enforce

- name: copy cobbler configuration files
  template: src={{ item.name }} dest=/etc/cobbler/{{ item.file_name }} mode=0644
  with_items:
    - { name: tftpd.template, file_name: tftpd.template }
    - { name: modules.conf, file_name: modules.conf }
    - { name: dhcp.template.nodocker.j2, file_name: dhcp.template }
    - { name: named.template.nodocker.j2, file_name: named.template }
    - { name: settings.j2, file_name: settings }
  notify:
    - restart httpd
    - restart cobbler
    - cobbler sync

- meta: flush_handlers

- name: remove old cobbler folders
  shell: rm -rf path=/var/lib/cobbler/{{ item }}
  with_items:
    - snippets
    - scripts
    - triggers
    - kickstarts

- name: create cobbler folders
  file: path=/var/lib/cobbler/{{ item }} state=directory mode=0755
  with_items:
    - snippets
    - scripts
    - triggers
    - kickstarts

- name: copy snippets to cobbler folder
  shell: cp -rf /opt/compass-adapters/cobbler/{{ item }}/* /var/lib/cobbler/{{ item }}/
  with_items:
    - snippets
    - scripts
    - triggers
    - kickstarts
  notify:
    cobbler sync

- name: change snippets mode
  file: path=/var/lib/cobbler mode=0755 recurse=yes

- name: create cblr_ks folder
  file: path=/var/www/cblr_ks mode=0755 state=directory

- name: change kickstart mode
  file: path=/var/lib/cobbler/kickstarts mode=0666 recurse=yes

- name: disable selinux
  selinux: state=disabled

- name: disable selinux real time
  command: echo 0 > /selinux/enforce

- name: clean cobbler log folder
  file: path=/var/log/cobbler state=absent

- name: create cobbler log directories
  file: path={{ item }} mode=0777 state=directory recurse=yes
  with_items:
    - /var/log/cobbler
    - /var/log/cobbler/anamon
    - /var/log/cobbler/tasks

- name: copy distributions to repo
  template: src=distributions dest=/tmp/distributions mode=0644

- name: prepare cobbler ppa repo
  shell: |
    for i in {{ item.ppa_repo_name }}; do
        mkdir -p /var/lib/cobbler/repo_mirror/$i/conf
        cp -f /tmp/distributions /var/lib/cobbler/repo_mirror/$i/conf/distributions
        chmod 0644 /var/lib/cobbler/repo_mirror/$i/conf -R
        cp -f {{ item.ppa_repo_dir}}/$i.tar.gz /var/lib/cobbler/repo_mirror/$i.tar.gz
        tar -zxvf /var/lib/cobbler/repo_mirror/$i.tar.gz -C /var/lib/cobbler/repo_mirror/
    done
  with_items: distros

- name: start cobbler and httpd services
  service: name={{ item }} state=restarted enabled=yes
  with_items:
    - httpd
    - cobblerd

- name: add repos
  shell: |
    for i in {{ item.ppa_repo_name }}; do
        cobbler repo add --name $i --mirror=/var/lib/cobbler/repo_mirror/$i --mirror-locally=Y --arch=x86_64 {{ item.extra }}
    done
  with_items: distros
  args:
    creates: /opt/repo_added.txt
  ignore_errors: yes
  run_once: True

- name: cobbler repo sync
  command: cobbler reposync

- name: copy loader files
  shell: cp -f /opt/{{ cobbler_loaders_name }} /var/lib/cobbler/

- name: untar loaders file
  unarchive: src=/var/lib/cobbler/{{ cobbler_loaders_name }} dest=/var/lib/cobbler/ 
             copy=no
 
- name: cobbler get loaders
  command: cobbler get-loaders

- name: create directory for images
  file: path=/var/lib/cobbler/iso state=directory

- name: copy images file
  shell: cp {{ item.iso_file }} /var/lib/cobbler/iso/{{ item.name }}.iso
  with_items: distros

- name: update iso mode
  file: path=/var/lib/cobbler/iso/{{ item.name }}.iso mode=0644
  with_items: distros

- name: mount_info
  command: mount
  register: mount_info

- name: create mount point
  file: name=/mnt/{{ item.name }} state=directory
  with_items: distros
  when: mount_info.stdout.find('CentOS') == -1 and mount_info.stdout.find('Ubuntu') == -1
  ignore_errors: yes

- name: mount images
  shell: mount -o loop /var/lib/cobbler/iso/{{ item.name }}.iso /mnt/{{ item.name }}
  with_items: distros
  when: mount_info.stdout.find('CentOS') == -1 and mount_info.stdout.find('Ubuntu') == -1
  args:
    creates: /opt/image_mounted.txt
  ignore_errors: yes
  run_once: True

- name: import distros
  command: cobbler import --path=/mnt/{{ item.name }} --name {{ item.name }} --arch=x86_64 --kickstart=/var/lib/cobbler/kickstarts/default.ks --breed={{ item.breed }}
  with_items: distros
  args:
    creates: /opt/distro_imported.txt
  ignore_errors: yes
  run_once: True

- name: generate public key file for ssh
  template: src=id_rsa.pub.j2 dest=/var/lib/cobbler/id_rsa.pub
  when: push_ssh_key is defined

- name: generate ssh key for root
  user: name=root generate_ssh_key=yes ssh_key_bits=2048 ssh_key_file=.ssh/id_rsa
  when: push_ssh_key is not defined

- name: edit profiles
  shell: cobbler profile edit --name={{ item.name }} --repo="{{ item.ppa_repo_name }}" --distro={{ item.name }} --ksmeta="tree=http://{{ mgmt_next_ip }}/cobbler/ks_mirror/{{ item.name }}" --kickstart=/var/lib/cobbler/kickstarts/{{ item.kickstart }} --kopts="{{ item.kopts }}" --kopts-post="{{ item.kopts_post }}"
  with_items: distros
  when: push_ssh_key is not defined

- name: edit profiles with push ssh key option
  shell: cobbler profile edit --name={{ item.name }} --repo="{{ item.ppa_repo_name }}" --distro={{ item.name }} --ksmeta="tree=http://{{ mgmt_next_ip }}/cobbler/ks_mirror/{{ item.name }} push_ssh_keys=/var/lib/cobbler/id_rsa.pub" --kickstart=/var/lib/cobbler/kickstarts/{{ item.kickstart }} --kopts="{{ item.kopts }}" --kopts-post="{{ item.kopts_post }}"
  with_items: distros
  when: push_ssh_key is defined

- name: remove default repo
  command: cobbler repo remove --name {{ item.name }}
  with_items: distros
  when: item.default_ppa_repo_name is defined

- name: cobbler repo sync again
  shell: cobbler reposync

- name: cobbler sync
  shell: cobbler sync

- name: restart xinetd
  service: name=xinetd state=restarted

- name: restart dhcpd
  service: name=dhcpd state=restarted enabled=yes

- name: cobbler check
  shell: cobbler check

- name: get all systems
  shell: cobbler system list
  register: cobbler_systems

- name: remove all systems
  shell: cobbler system remove --name {{ item }}
  with_items: cobbler_systems.stdout_lines
  when: cobbler_systems and test is defined and test == True
